desc: "Aos virtual development machine"
min_ver: "0.21"

variables:
  # Aos unit configuration
  UNIT_MODEL: "vm-dev"
  UNIT_VERSION: "1.0"

  BUNDLE_IMAGE_VERSION: "4.3.1"
  ROOTFS_REF_VERSION: "4.3.0"

  # Aos node configuration
  NODE_ID: "main"
  MAIN_NODE_ID: "main"

  # Network configuration
  NODE_IP: "10.0.0.100"
  MAIN_NODE_IP: "10.0.0.100"

  # Build configuration
  YOCTOS_WORK_DIR: "yocto"
  MACHINE: "genericx86-64"
  DISTRO: "aos-vm-dev"

  AOS_BASE_IMAGE: "aos-image-vm"

common_data:
  # Sources used by all nodes
  common_sources: &COMMON_SOURCES
    - type: git
      url: "https://git.yoctoproject.org/poky"
      rev: "b6f6c72945"

    - type: git
      url: "https://git.openembedded.org/meta-openembedded"
      rev: "8bb165335"

    - type: git
      url: "https://git.yoctoproject.org/meta-virtualization"
      rev: "cb2bc17e"

    - type: git
      url: "https://git.yoctoproject.org/meta-security"
      rev: "1a3e42c"

    - type: git
      url: "https://git.yoctoproject.org/meta-selinux"
      rev: "a401f4b"

    - type: git
      url: "https://github.com/aoscloud/meta-aos"
      rev: "v7.3.0"

    - type: git
      url: "https://github.com/aoscloud/meta-aos-vm"
      rev: "v4.3.0"

  # Common configuration options for all nodes
  common_conf: &COMMON_CONF
    - [SSTATE_DIR, "${TOPDIR}/../../../common_data/sstate"]
    - [DL_DIR, "${TOPDIR}/../../../common_data/downloads"]

    - [MACHINE, "%{MACHINE}"]
    - [DISTRO, "%{DISTRO}"]

    # Skip warning about missing "virtualization" distro feature
    - [SKIP_META_VIRT_SANITY_CHECK, "1"]

    # Deploy grub configuration
    - [EXTRA_IMAGEDEPENDS:append, "grub-config"]

      # Unit model
    - [AOS_UNIT_MODEL, "%{UNIT_MODEL}"]
    - [AOS_UNIT_VERSION, "%{UNIT_VERSION}"]

    # Image versions
    - [AOS_ROOTFS_IMAGE_VERSION, "%{BUNDLE_IMAGE_VERSION}"]
    - [AOS_BOOT_IMAGE_VERSION, "%{BUNDLE_IMAGE_VERSION}"]

    # Node configuration
    - [AOS_MAIN_NODE_ID, "%{MAIN_NODE_ID}"]
    - [AOS_MAIN_NODE_HOSTNAME, "%{MAIN_NODE_ID}"]
    - [AOS_NODE_GW_IP, "10.0.0.1"]
    - [AOS_HOSTS, "%{MAIN_NODE_IP}=wwwivi"]

    # Generate home RW partition
    - [AOS_HOME_PART_SIZE, "524288"]

  main_layers: &MAIN_LAYERS
    - "../meta-openembedded/meta-filesystems"
    - "../meta-openembedded/meta-networking"
    - "../meta-openembedded/meta-oe"
    - "../meta-openembedded/meta-perl"
    - "../meta-openembedded/meta-python"
    - "../meta-security"
    - "../meta-selinux"
    - "../meta-virtualization"
    - "../meta-aos"
    - "../meta-aos-vm/meta-aos-vm-common"
    - "../meta-aos-vm/meta-aos-vm-main"

  node_layers: &NODE_LAYERS
    - "../meta-openembedded/meta-filesystems"
    - "../meta-openembedded/meta-networking"
    - "../meta-openembedded/meta-oe"
    - "../meta-openembedded/meta-perl"
    - "../meta-openembedded/meta-python"
    - "../meta-security"
    - "../meta-selinux"
    - "../meta-virtualization"
    - "../meta-aos"
    - "../meta-aos-vm/meta-aos-vm-common"
    - "../meta-aos-vm/meta-aos-vm-node"

components:
  aos-vm:
    default: true
    build-dir: "%{YOCTOS_WORK_DIR}"
    sources: *COMMON_SOURCES
    builder:
      type: yocto
      work_dir: "build-%{NODE_ID}"
      conf:
        - *COMMON_CONF
        - [IMAGE_BASENAME, "aos-image-vm"]

        - [AOS_BASE_IMAGE, "aos-image-vm"]
        - [AOS_NODE_ID, "%{NODE_ID}"]
        - [AOS_NODE_IP, "%{NODE_IP}/24"]
        - [
            AOS_UM_COMPONENT_PREFIX,
            "${AOS_UNIT_MODEL}-${AOS_UNIT_VERSION}-%{NODE_ID}-",
          ]

      build_target: aos-image-vm
      target_images:
        - "tmp/deploy/images/%{MACHINE}/%{AOS_BASE_IMAGE}-%{MACHINE}.ext4"
        - "tmp/deploy/images/%{MACHINE}/%{AOS_BASE_IMAGE}-%{MACHINE}-home.ext4"
        - "tmp/deploy/images/%{MACHINE}/%{AOS_BASE_IMAGE}-%{MACHINE}-var.ext4"
        - "tmp/deploy/images/%{MACHINE}/grub-efi-bootx64.efi"
        - "tmp/deploy/images/%{MACHINE}/bzImage"
        - "tmp/deploy/images/%{MACHINE}/aos-image-initramfs-%{MACHINE}.cpio.gz"
        - "tmp/deploy/images/%{MACHINE}/grub.cfg"
        - "tmp/deploy/images/%{MACHINE}/aos/boot/version"

  layers:
    builder:
      type: custom_script
      work_dir: "workdir"
      script: "../yocto/meta-aos/scripts/layer_builder.py"
      target_images:
        - "../output/layers/nodejs-layer.tar"
        - "../output/layers/pylibs-layer.tar"
        - "../output/layers/libvis-layer.tar"

      additional_deps:
        - "%{YOCTOS_WORK_DIR}/build-%{NODE_ID}/tmp/deploy/images/%{MACHINE}/%{AOS_BASE_IMAGE}-%{MACHINE}.ext4"

      layers:
        yocto_dir: "../%{YOCTOS_WORK_DIR}"
        build_dir: "build-%{NODE_ID}"
        output_dir: "../output/layers"
        base_image: "aos-image-vm"
        items:
          nodejs-layer:
            target: "aos-nodejs-layer"

          pylibs-layer:
            target: "aos-pylibs-layer"

          libvis-layer:
            target: "aos-libvis-layer"

  fota-full:
    builder:
      type: custom_script
      work_dir: "workdir"
      script: "../yocto/meta-aos/scripts/fota_builder.py"
      args: "-v"
      target_images:
        - "../output/fota/%{UNIT_MODEL}-%{UNIT_VERSION}-%{NODE_ID}-full-%{BUNDLE_IMAGE_VERSION}.tar"

      additional_deps:
        - "%{YOCTOS_WORK_DIR}/build-%{NODE_ID}/tmp/deploy/images/%{MACHINE}/%{AOS_BASE_IMAGE}-%{MACHINE}.ext4"
        - "%{YOCTOS_WORK_DIR}/build-%{NODE_ID}/tmp/deploy/images/%{MACHINE}/aos-image-initramfs-%{MACHINE}.cpio.gz"
        - "%{YOCTOS_WORK_DIR}/build-%{NODE_ID}/tmp/deploy/images/%{MACHINE}/bzImage"
        - "%{YOCTOS_WORK_DIR}/build-%{NODE_ID}/tmp/deploy/images/%{MACHINE}/grub-efi-bootx64.efi"
        - "%{YOCTOS_WORK_DIR}/build-%{NODE_ID}/tmp/deploy/images/%{MACHINE}/grub.cfg"
        - "%{YOCTOS_WORK_DIR}/build-%{NODE_ID}/tmp/deploy/images/%{MACHINE}/aos/boot/version"

      components:
        boot:
          componentType: "%{UNIT_MODEL}-%{UNIT_VERSION}-%{NODE_ID}-boot"
          enabled: true
          method: "raw"
          description: "%{NODE_ID} boot image"
          vendorVersion: "%{BUNDLE_IMAGE_VERSION}"
          fileName: "%{UNIT_MODEL}-%{UNIT_VERSION}-%{NODE_ID}-boot-%{BUNDLE_IMAGE_VERSION}.gz"
          partition:
            gpt_type: 21686148-6449-6E6F-744E-656564454649 # BIOS boot partition (kinda...)
            type: vfat
            size: 128 MiB
            items:
              "aos-image-initramfs-%{MACHINE}.cpio.gz": "../%{YOCTOS_WORK_DIR}/build-%{NODE_ID}/tmp/deploy/images/%{MACHINE}/aos-image-initramfs-%{MACHINE}.cpio.gz"
              "bzImage": "../%{YOCTOS_WORK_DIR}/build-%{NODE_ID}/tmp/deploy/images/%{MACHINE}/bzImage"
              "EFI/BOOT/bootx64.efi": "../%{YOCTOS_WORK_DIR}/build-%{NODE_ID}/tmp/deploy/images/%{MACHINE}/grub-efi-bootx64.efi"
              "EFI/BOOT/grub.cfg": "../%{YOCTOS_WORK_DIR}/build-%{NODE_ID}/tmp/deploy/images/%{MACHINE}/grub.cfg"
              "aos/version": "../%{YOCTOS_WORK_DIR}/build-%{NODE_ID}/tmp/deploy/images/%{MACHINE}/aos/boot/version"

        rootfs-full:
          componentType: "%{UNIT_MODEL}-%{UNIT_VERSION}-%{NODE_ID}-rootfs"
          enabled: true
          method: "overlay"
          ostree_repo: "../ostree_repo/%{UNIT_MODEL}-%{UNIT_VERSION}-%{NODE_ID}-rootfs"
          yocto_dir: "../%{YOCTOS_WORK_DIR}"
          build_dir: "build-%{NODE_ID}"
          type: "full"
          description: "%{NODE_ID} rootfs image"
          vendorVersion: "%{BUNDLE_IMAGE_VERSION}"
          exclude:
            - "home/*"
            - "var/*"

          fileName: "%{UNIT_MODEL}-%{UNIT_VERSION}-%{NODE_ID}-rootfs-full-%{BUNDLE_IMAGE_VERSION}.squashfs"

  fota-incremental:
    builder:
      type: custom_script
      work_dir: "workdir"
      script: "../yocto/meta-aos/scripts/fota_builder.py"
      args: "-v"
      target_images:
        - "../output/fota/%{UNIT_MODEL}-%{UNIT_VERSION}-%{NODE_ID}-incremental-%{BUNDLE_IMAGE_VERSION}.tar"

      additional_deps:
        - "%{YOCTOS_WORK_DIR}/build-%{NODE_ID}/tmp/deploy/images/%{MACHINE}/%{AOS_BASE_IMAGE}-%{MACHINE}.ext4"

      components:
        rootfs-incremental:
          componentType: "%{UNIT_MODEL}-%{UNIT_VERSION}-%{NODE_ID}-rootfs"
          enabled: true
          method: "overlay"
          ostree_repo: "../ostree_repo/%{UNIT_MODEL}-%{UNIT_VERSION}-%{NODE_ID}-rootfs"
          yocto_dir: "../%{YOCTOS_WORK_DIR}"
          build_dir: "build-%{NODE_ID}"
          type: "incremental"
          description: "%{NODE_ID} rootfs image"
          vendorVersion: "%{BUNDLE_IMAGE_VERSION}"
          requiredVersion: "%{ROOTFS_REF_VERSION}"
          exclude:
            - "home/*"
            - "var/*"
          fileName: "%{UNIT_MODEL}-%{UNIT_VERSION}-%{NODE_ID}-rootfs-incremental-%{BUNDLE_IMAGE_VERSION}.squashfs"

images:
  "%{NODE_ID}":
    type: gpt
    desc: "Aos VM node image"
    partitions:
      boot_a:
        gpt_type: 21686148-6449-6E6F-744E-656564454649 # BIOS boot partition (kinda...)
        type: vfat
        size: 256 MiB
        items:
          "aos-image-initramfs-%{MACHINE}.cpio.gz": "%{YOCTOS_WORK_DIR}/build-%{NODE_ID}/tmp/deploy/images/%{MACHINE}/aos-image-initramfs-%{MACHINE}.cpio.gz"
          "bzImage": "%{YOCTOS_WORK_DIR}/build-%{NODE_ID}/tmp/deploy/images/%{MACHINE}/bzImage"
          "EFI/BOOT/bootx64.efi": "%{YOCTOS_WORK_DIR}/build-%{NODE_ID}/tmp/deploy/images/%{MACHINE}/grub-efi-bootx64.efi"
          "EFI/BOOT/grub.cfg": "%{YOCTOS_WORK_DIR}/build-%{NODE_ID}/tmp/deploy/images/%{MACHINE}/grub.cfg"
          "aos/version": "%{YOCTOS_WORK_DIR}/build-%{NODE_ID}/tmp/deploy/images/%{MACHINE}/aos/boot/version"

      boot_b:
        gpt_type: 21686148-6449-6E6F-744E-656564454649 # BIOS boot partition (kinda...)
        type: vfat
        size: 256 MiB
        items:
          "aos-image-initramfs-%{MACHINE}.cpio.gz": "%{YOCTOS_WORK_DIR}/build-%{NODE_ID}/tmp/deploy/images/%{MACHINE}/aos-image-initramfs-%{MACHINE}.cpio.gz"
          "bzImage": "%{YOCTOS_WORK_DIR}/build-%{NODE_ID}/tmp/deploy/images/%{MACHINE}/bzImage"
          "EFI/BOOT/bootx64.efi": "%{YOCTOS_WORK_DIR}/build-%{NODE_ID}/tmp/deploy/images/%{MACHINE}/grub-efi-bootx64.efi"
          "EFI/BOOT/grub.cfg": "%{YOCTOS_WORK_DIR}/build-%{NODE_ID}/tmp/deploy/images/%{MACHINE}/grub.cfg"
          "aos/version": "%{YOCTOS_WORK_DIR}/build-%{NODE_ID}/tmp/deploy/images/%{MACHINE}/aos/boot/version"

      rootfs:
        gpt_type: B921B045-1DF0-41C3-AF44-4C6F280D3FAE # Linux aarch64 root
        type: raw_image
        image_path: "%{YOCTOS_WORK_DIR}/build-%{NODE_ID}/tmp/deploy/images/%{MACHINE}/%{AOS_BASE_IMAGE}-%{MACHINE}.ext4"

      home:
        gpt_type: B921B045-1DF0-41C3-AF44-4C6F280D3FAE # Linux aarch64 root
        type: raw_image
        image_path: "%{YOCTOS_WORK_DIR}/build-%{NODE_ID}/tmp/deploy/images/%{MACHINE}/%{AOS_BASE_IMAGE}-%{MACHINE}-home.ext4"

      var:
        gpt_type: B921B045-1DF0-41C3-AF44-4C6F280D3FAE # Linux aarch64 root
        type: raw_image
        image_path: "%{YOCTOS_WORK_DIR}/build-%{NODE_ID}/tmp/deploy/images/%{MACHINE}/%{AOS_BASE_IMAGE}-%{MACHINE}-var.ext4"

      aos:
        gpt_type: CA7D7CCB-63ED-4C53-861C-1742536059CC # LUKS partition
        type: empty
        size: 4096 MiB

parameters:
  NODE_TYPE:
    desc: "Node type to build"
    "single":
      default: true
      overrides:
        components:
          aos-vm:
            builder:
              conf:
                - [AOS_VIS_DATA_PROVIDER, "%{VIS_DATA_PROVIDER}"]

              layers: *MAIN_LAYERS

    "main":
      overrides:
        variables:
          UNIT_MODEL: "vm-dev-multinode"

        components:
          aos-vm:
            builder:
              conf:
                - [AOS_VIS_DATA_PROVIDER, "%{VIS_DATA_PROVIDER}"]
                - [AOS_SM_NODES, "%{NODE_ID} node1"]
                - [AOS_UM_NODES, "%{NODE_ID} node1"]
                - [AOS_IAM_NODES, "%{NODE_ID} node1"]
                - [AOS_IAM_HOSTNAMES, "%{NODE_ID} node1"]

              layers: *MAIN_LAYERS

    "secondary":
      overrides:
        variables:
          UNIT_MODEL: "vm-dev-multinode"
          NODE_ID: "secondary"

        components:
          aos-vm:
            builder:
              conf:
                - [AOS_HOSTS:append, " %{MAIN_NODE_IP}=%{MAIN_NODE_ID}"]

              layers: *NODE_LAYERS

  # Aos VIS data provider
  VIS_DATA_PROVIDER:
    desc: "specifies plugin for VIS automotive data"
    renesassimulator:
      default: true
      overrides:
        variables:
          VIS_DATA_PROVIDER: "renesassimulatoradapter"

    telemetryemulator:
      overrides:
        variables:
          VIS_DATA_PROVIDER: "telemetryemulatoradapter"
